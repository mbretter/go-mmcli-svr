// Code generated by mockery. DO NOT EDIT.

package main

import (
	http "net/http"

	mock "github.com/stretchr/testify/mock"
)

// modemHandlersInterfaceMock is an autogenerated mock type for the modemHandlersInterface type
type modemHandlersInterfaceMock struct {
	mock.Mock
}

type modemHandlersInterfaceMock_Expecter struct {
	mock *mock.Mock
}

func (_m *modemHandlersInterfaceMock) EXPECT() *modemHandlersInterfaceMock_Expecter {
	return &modemHandlersInterfaceMock_Expecter{mock: &_m.Mock}
}

// ModemDetail provides a mock function with given fields: w, r
func (_m *modemHandlersInterfaceMock) ModemDetail(w http.ResponseWriter, r *http.Request) {
	_m.Called(w, r)
}

// modemHandlersInterfaceMock_ModemDetail_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ModemDetail'
type modemHandlersInterfaceMock_ModemDetail_Call struct {
	*mock.Call
}

// ModemDetail is a helper method to define mock.On call
//   - w http.ResponseWriter
//   - r *http.Request
func (_e *modemHandlersInterfaceMock_Expecter) ModemDetail(w interface{}, r interface{}) *modemHandlersInterfaceMock_ModemDetail_Call {
	return &modemHandlersInterfaceMock_ModemDetail_Call{Call: _e.mock.On("ModemDetail", w, r)}
}

func (_c *modemHandlersInterfaceMock_ModemDetail_Call) Run(run func(w http.ResponseWriter, r *http.Request)) *modemHandlersInterfaceMock_ModemDetail_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(http.ResponseWriter), args[1].(*http.Request))
	})
	return _c
}

func (_c *modemHandlersInterfaceMock_ModemDetail_Call) Return() *modemHandlersInterfaceMock_ModemDetail_Call {
	_c.Call.Return()
	return _c
}

func (_c *modemHandlersInterfaceMock_ModemDetail_Call) RunAndReturn(run func(http.ResponseWriter, *http.Request)) *modemHandlersInterfaceMock_ModemDetail_Call {
	_c.Call.Return(run)
	return _c
}

// ModemList provides a mock function with given fields: w, r
func (_m *modemHandlersInterfaceMock) ModemList(w http.ResponseWriter, r *http.Request) {
	_m.Called(w, r)
}

// modemHandlersInterfaceMock_ModemList_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ModemList'
type modemHandlersInterfaceMock_ModemList_Call struct {
	*mock.Call
}

// ModemList is a helper method to define mock.On call
//   - w http.ResponseWriter
//   - r *http.Request
func (_e *modemHandlersInterfaceMock_Expecter) ModemList(w interface{}, r interface{}) *modemHandlersInterfaceMock_ModemList_Call {
	return &modemHandlersInterfaceMock_ModemList_Call{Call: _e.mock.On("ModemList", w, r)}
}

func (_c *modemHandlersInterfaceMock_ModemList_Call) Run(run func(w http.ResponseWriter, r *http.Request)) *modemHandlersInterfaceMock_ModemList_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(http.ResponseWriter), args[1].(*http.Request))
	})
	return _c
}

func (_c *modemHandlersInterfaceMock_ModemList_Call) Return() *modemHandlersInterfaceMock_ModemList_Call {
	_c.Call.Return()
	return _c
}

func (_c *modemHandlersInterfaceMock_ModemList_Call) RunAndReturn(run func(http.ResponseWriter, *http.Request)) *modemHandlersInterfaceMock_ModemList_Call {
	_c.Call.Return(run)
	return _c
}

// newModemHandlersInterfaceMock creates a new instance of modemHandlersInterfaceMock. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func newModemHandlersInterfaceMock(t interface {
	mock.TestingT
	Cleanup(func())
}) *modemHandlersInterfaceMock {
	mock := &modemHandlersInterfaceMock{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
